# coding: utf-8

"""
    Personnel Data

    API for reading and writing personnel data including data about attendances, absences, documents, etc

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from personio_data_python_sdk.pydantic.absence_certificate import AbsenceCertificate
from personio_data_python_sdk.pydantic.absence_time_off_type import AbsenceTimeOffType
from personio_data_python_sdk.pydantic.short_employee import ShortEmployee

class Absence(BaseModel):
    id: typing.Optional[int] = Field(None, alias='id')

    status: typing.Optional[str] = Field(None, alias='status')

    start_date: typing.Optional[str] = Field(None, alias='start_date')

    end_date: typing.Optional[str] = Field(None, alias='end_date')

    days_count: typing.Optional[typing.Union[int, float]] = Field(None, alias='days_count')

    half_day_start: typing.Optional[bool] = Field(None, alias='half_day_start')

    half_day_end: typing.Optional[bool] = Field(None, alias='half_day_end')

    time_off_type: typing.Optional[AbsenceTimeOffType] = Field(None, alias='time_off_type')

    employee: typing.Optional[ShortEmployee] = Field(None, alias='employee')

    certificate: typing.Optional[AbsenceCertificate] = Field(None, alias='certificate')

    created_at: typing.Optional[str] = Field(None, alias='created_at')

    # API if the origin is api, otherwise returns an admin employee's name who's account is used to create the absence
    created_by: typing.Optional[str] = Field(None, alias='created_by')

    updated_at: typing.Optional[str] = Field(None, alias='updated_at')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
