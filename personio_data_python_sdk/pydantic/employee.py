# coding: utf-8

"""
    Personnel Data

    API for reading and writing personnel data including data about attendances, absences, documents, etc

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from personio_data_python_sdk.pydantic.absence_entitlement import AbsenceEntitlement
from personio_data_python_sdk.pydantic.cost_centers import CostCenters
from personio_data_python_sdk.pydantic.department import Department
from personio_data_python_sdk.pydantic.employee_contract_end_date import EmployeeContractEndDate
from personio_data_python_sdk.pydantic.employee_created_at import EmployeeCreatedAt
from personio_data_python_sdk.pydantic.employee_dynamic21827 import EmployeeDynamic21827
from personio_data_python_sdk.pydantic.employee_email import EmployeeEmail
from personio_data_python_sdk.pydantic.employee_employment_type import EmployeeEmploymentType
from personio_data_python_sdk.pydantic.employee_first_name import EmployeeFirstName
from personio_data_python_sdk.pydantic.employee_fix_salary import EmployeeFixSalary
from personio_data_python_sdk.pydantic.employee_fix_salary_interval import EmployeeFixSalaryInterval
from personio_data_python_sdk.pydantic.employee_gender import EmployeeGender
from personio_data_python_sdk.pydantic.employee_hire_date import EmployeeHireDate
from personio_data_python_sdk.pydantic.employee_hourly_salary import EmployeeHourlySalary
from personio_data_python_sdk.pydantic.employee_id import EmployeeId
from personio_data_python_sdk.pydantic.employee_last_modified_at import EmployeeLastModifiedAt
from personio_data_python_sdk.pydantic.employee_last_name import EmployeeLastName
from personio_data_python_sdk.pydantic.employee_last_working_day import EmployeeLastWorkingDay
from personio_data_python_sdk.pydantic.employee_position import EmployeePosition
from personio_data_python_sdk.pydantic.employee_preferred_name import EmployeePreferredName
from personio_data_python_sdk.pydantic.employee_probation_period_end import EmployeeProbationPeriodEnd
from personio_data_python_sdk.pydantic.employee_profile_picture import EmployeeProfilePicture
from personio_data_python_sdk.pydantic.employee_status import EmployeeStatus
from personio_data_python_sdk.pydantic.employee_termination_date import EmployeeTerminationDate
from personio_data_python_sdk.pydantic.employee_termination_reason import EmployeeTerminationReason
from personio_data_python_sdk.pydantic.employee_termination_type import EmployeeTerminationType
from personio_data_python_sdk.pydantic.employee_vacation_day_balance import EmployeeVacationDayBalance
from personio_data_python_sdk.pydantic.employee_weekly_working_hours import EmployeeWeeklyWorkingHours
from personio_data_python_sdk.pydantic.holiday_calendar import HolidayCalendar
from personio_data_python_sdk.pydantic.office import Office
from personio_data_python_sdk.pydantic.supervisor import Supervisor
from personio_data_python_sdk.pydantic.team import Team
from personio_data_python_sdk.pydantic.work_schedule import WorkSchedule

class Employee(BaseModel):
    id: typing.Optional[EmployeeId] = Field(None, alias='id')

    first_name: typing.Optional[EmployeeFirstName] = Field(None, alias='first_name')

    last_name: typing.Optional[EmployeeLastName] = Field(None, alias='last_name')

    preferred_name: typing.Optional[EmployeePreferredName] = Field(None, alias='preferred_name')

    email: typing.Optional[EmployeeEmail] = Field(None, alias='email')

    gender: typing.Optional[EmployeeGender] = Field(None, alias='gender')

    status: typing.Optional[EmployeeStatus] = Field(None, alias='status')

    position: typing.Optional[EmployeePosition] = Field(None, alias='position')

    supervisor: typing.Optional[Supervisor] = Field(None, alias='supervisor')

    employment_type: typing.Optional[EmployeeEmploymentType] = Field(None, alias='employment_type')

    weekly_working_hours: typing.Optional[EmployeeWeeklyWorkingHours] = Field(None, alias='weekly_working_hours')

    hire_date: typing.Optional[EmployeeHireDate] = Field(None, alias='hire_date')

    contract_end_date: typing.Optional[EmployeeContractEndDate] = Field(None, alias='contract_end_date')

    termination_date: typing.Optional[EmployeeTerminationDate] = Field(None, alias='termination_date')

    termination_type: typing.Optional[EmployeeTerminationType] = Field(None, alias='termination_type')

    termination_reason: typing.Optional[EmployeeTerminationReason] = Field(None, alias='termination_reason')

    probation_period_end: typing.Optional[EmployeeProbationPeriodEnd] = Field(None, alias='probation_period_end')

    created_at: typing.Optional[EmployeeCreatedAt] = Field(None, alias='created_at')

    last_modified_at: typing.Optional[EmployeeLastModifiedAt] = Field(None, alias='last_modified_at')

    subcompany: typing.Optional[Office] = Field(None, alias='subcompany')

    office: typing.Optional[Office] = Field(None, alias='office')

    department: typing.Optional[Department] = Field(None, alias='department')

    cost_centers: typing.Optional[CostCenters] = Field(None, alias='cost_centers')

    holiday_calendar: typing.Optional[HolidayCalendar] = Field(None, alias='holiday_calendar')

    work_schedule: typing.Optional[WorkSchedule] = Field(None, alias='work_schedule')

    absence_entitlement: typing.Optional[AbsenceEntitlement] = Field(None, alias='absence_entitlement')

    team: typing.Optional[Team] = Field(None, alias='team')

    fix_salary: typing.Optional[EmployeeFixSalary] = Field(None, alias='fix_salary')

    fix_salary_interval: typing.Optional[EmployeeFixSalaryInterval] = Field(None, alias='fix_salary_interval')

    hourly_salary: typing.Optional[EmployeeHourlySalary] = Field(None, alias='hourly_salary')

    vacation_day_balance: typing.Optional[EmployeeVacationDayBalance] = Field(None, alias='vacation_day_balance')

    last_working_day: typing.Optional[EmployeeLastWorkingDay] = Field(None, alias='last_working_day')

    profile_picture: typing.Optional[EmployeeProfilePicture] = Field(None, alias='profile_picture')

    dynamic_21827: typing.Optional[EmployeeDynamic21827] = Field(None, alias='dynamic_21827')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
