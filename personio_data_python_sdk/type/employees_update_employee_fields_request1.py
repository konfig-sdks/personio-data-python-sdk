# coding: utf-8

"""
    Personnel Data

    API for reading and writing personnel data including data about attendances, absences, documents, etc

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING


RequiredEmployeesUpdateEmployeeFieldsRequest1 = TypedDict("RequiredEmployeesUpdateEmployeeFieldsRequest1", {
    })

OptionalEmployeesUpdateEmployeeFieldsRequest1 = TypedDict("OptionalEmployeesUpdateEmployeeFieldsRequest1", {
    # Employee first name
    "employee[first_name]": str,

    # Employee last name
    "employee[last_name]": str,

    # Employee preferred name
    "employee[preferred_name]": str,

    # Employee gender
    "employee[gender]": str,

    # Employee position
    "employee[position]": str,

    # Employee department
    "employee[department]": str,

    # Employee hire date. Format: yyyy-mm-dd
    "employee[hire_date]": date,

    # Employee weekly working hours
    "employee[weekly_working_hours]": typing.Union[int, float],

    # Employee ID of the Supervisor to be assigned. It needs to belong to a current existing employee and not the same as the one of the employee being updated, otherwise an error will be returned. If sent as null, will unset the employee's supervisor.
    "employee[supervisor_id]": typing.Union[int, float],

    # Employee status
    "employee[status]": str,
    }, total=False)

class EmployeesUpdateEmployeeFieldsRequest1(RequiredEmployeesUpdateEmployeeFieldsRequest1, OptionalEmployeesUpdateEmployeeFieldsRequest1):
    pass
